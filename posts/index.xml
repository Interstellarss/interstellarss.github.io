<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 法术研究分享Blog</title>
        <link>https://interstellarss.github.io/posts/</link>
        <description>所有文章 | 法术研究分享Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 02 Mar 2022 10:03:37 &#43;0100</lastBuildDate><atom:link href="https://interstellarss.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Something about ISA Emulation -- 2</title>
    <link>https://interstellarss.github.io/posts/vt/isa_emulation2/</link>
    <pubDate>Wed, 02 Mar 2022 10:03:37 &#43;0100</pubDate>
    <author>作者</author>
    <guid>https://interstellarss.github.io/posts/vt/isa_emulation2/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>Something about Process-Virtual-Machine</title>
    <link>https://interstellarss.github.io/posts/vt/process_virtual_machine/</link>
    <pubDate>Thu, 10 Feb 2022 15:50:20 &#43;0100</pubDate>
    <author>作者</author>
    <guid>https://interstellarss.github.io/posts/vt/process_virtual_machine/</guid>
    <description><![CDATA[Process VM Emulation of a user-level process (with possibly different ISA, different OS) – components required? – techniques? – correctness verification? Process VM with same OS, same ISA – use case? motivation process migration flexible control of used OS resources „OS-level virtualization“ enough not discussed here Virtualization of]]></description>
</item><item>
    <title>Something about ISA Emulation -- 1</title>
    <link>https://interstellarss.github.io/posts/vt/isa_emulation1/</link>
    <pubDate>Tue, 16 Nov 2021 20:50:20 &#43;0100</pubDate>
    <author>作者</author>
    <guid>https://interstellarss.github.io/posts/vt/isa_emulation1/</guid>
    <description><![CDATA[A complete ISA consists of many parts, including the register set and memory architecture, the instructions , and the trap and interrupt architecture. A virtual machine implementation is usually concerned with all aspects of ISA emulation. Here we will be focusing on (user-level) instruction emulation. Instruction set emulation can be carried out basiclly in 2 techniques: interpretation, and binary translation. Interpretation involves a cycle of fetching a source instrction, analyzing]]></description>
</item><item>
    <title>摄影记录--1</title>
    <link>https://interstellarss.github.io/posts/photos/photograph1/</link>
    <pubDate>Fri, 04 Dec 2020 19:49:03 &#43;0100</pubDate>
    <author>作者</author>
    <guid>https://interstellarss.github.io/posts/photos/photograph1/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>Relational Model and Relational Algebra</title>
    <link>https://interstellarss.github.io/posts/database/datenbank-3/</link>
    <pubDate>Sun, 15 Nov 2020 11:34:02 &#43;0100</pubDate>
    <author>作者</author>
    <guid>https://interstellarss.github.io/posts/database/datenbank-3/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>「旋转」的不同实现方法</title>
    <link>https://interstellarss.github.io/posts/imge/imge-1/</link>
    <pubDate>Tue, 10 Nov 2020 16:08:41 &#43;0100</pubDate>
    <author>作者</author>
    <guid>https://interstellarss.github.io/posts/imge/imge-1/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>直观又调皮的ER-Model</title>
    <link>https://interstellarss.github.io/posts/database/datenbank-2/</link>
    <pubDate>Sun, 08 Nov 2020 14:44:27 &#43;0100</pubDate>
    <author>作者</author>
    <guid>https://interstellarss.github.io/posts/database/datenbank-2/</guid>
    <description><![CDATA[ER-Model 的基础概念]]></description>
</item><item>
    <title>初识数据库</title>
    <link>https://interstellarss.github.io/posts/database/datanbank-1/</link>
    <pubDate>Wed, 04 Nov 2020 19:46:16 &#43;0100</pubDate>
    <author>作者</author>
    <guid>https://interstellarss.github.io/posts/database/datanbank-1/</guid>
    <description><![CDATA[简单介绍DBMS的概念以及涵盖的主题]]></description>
</item><item>
    <title>作为带路专家的网络层</title>
    <link>https://interstellarss.github.io/posts/computernetwork/network-layer/</link>
    <pubDate>Mon, 06 Jul 2020 23:16:59 &#43;0200</pubDate>
    <author>作者</author>
    <guid>https://interstellarss.github.io/posts/computernetwork/network-layer/</guid>
    <description><![CDATA[在这里我们会认识到网络层提供的两种不同服务和网络层的核心也即&ndash;IP协议. 我们能够理解: 虚拟互连网络的概念. IP地址与物理地址的关]]></description>
</item><item>
    <title>当我们谈论 shared memory parallelism 的时候我们在谈论些什么--提升篇</title>
    <link>https://interstellarss.github.io/posts/seminar-hpc/shared-memory-parallelism_2/</link>
    <pubDate>Sun, 07 Jun 2020 21:44:12 &#43;0200</pubDate>
    <author>作者</author>
    <guid>https://interstellarss.github.io/posts/seminar-hpc/shared-memory-parallelism_2/</guid>
    <description><![CDATA[这次带来的是提升篇，其实就是seminar要交的paper的first draft，倒也算是偷懒的一种方式吧。 A brief Overview on Shared Memory Parallelism in Parallel Computing 1. Why parallel? To speed up,]]></description>
</item></channel>
</rss>
